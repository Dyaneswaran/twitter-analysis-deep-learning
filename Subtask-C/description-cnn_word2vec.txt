OffensEval 2019: Identifying and Categorizing Offensive Language in Social Media (SemEval 2019 - Task 6)
Test data - Sub-task C
v 1.0: January 29 2019

This package contains a *.csv file with two columns:
	(1) Sample ID
	(2) Sample Label

- (IND) Individual - The target of the offensive post is an individual: a famous person, a named individual or an unnamed person interacting in the conversation.
- (GRP) Group - The target of the offensive post is a group of people considered as a unity due to the same ethnicity, gender or sexual orientation, political affiliation, religious belief, or something else.
- (OTH) Other â€“ The target of the offensive post does not belong to any of the previous two categories (e.g., an organization, a situation, an event, or an issue)


Training Dataset
================


A combined dataset containing the following csv files was used to train our model.
	(1) Given training dataset (offenseval-training-v1.tsv) containing 3,987 targeted annotated tweets.
	(2) Given trial dataset (offenseval-trial.txt) containing 320 annotated tweets. 


Model Specification
===================

(1) Data Preprocessing : 


	1. Clean all HTML data.
	1. Remove Emojis and Emoticons.
	2. Remove URLs and Mentions.
	3. Expand all Hashtags.
	4. Expand Contractions.
	5. Lemmatize the words.
	6. Replacing Censored Words.
	7. Removing Punctuators.


(2) Building our Model :

	Our System is a made up of a Convolutional Neural Network 1D with an Embedding layer whose initial weights are assigned using an embedding matrix
	created from Word2Vec word vectors learnt from the given training dataset and are updated during the training process.

	An Embeddding Matrix created using the word Embeddings is given as the initialization weight matrix to the Embedding Layer.
	Using the CNN1D layers the bigrams, trigrams, fourgrams are produced by using an appropriate kernel. The output tensors each of 
	dimension 100 (using 100 filters) are concatenated in the Merged Layer to produce an output tensor of size 300 which is provided as 
	the input to the following Dense layers with dropouts and acitvated by the 'Softmax' function for 3 output classes. The network 
	trained using an embedding matrix using Word2Vec vectors learnt from the available training datasets calculates the probablity of the offensive tweet being a insult targeted at an individual or an organization or at others.


The Model's layer descriptions are provided as follows - 
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
input_12 (InputLayer)           (None, 62)           0                                            
__________________________________________________________________________________________________
embedding_15 (Embedding)        (None, 62, 200)      4000000     input_12[0][0]                   
__________________________________________________________________________________________________
conv1d_32 (Conv1D)              (None, 61, 100)      40100       embedding_15[0][0]               
__________________________________________________________________________________________________
conv1d_33 (Conv1D)              (None, 60, 100)      60100       embedding_15[0][0]               
__________________________________________________________________________________________________
conv1d_34 (Conv1D)              (None, 59, 100)      80100       embedding_15[0][0]               
__________________________________________________________________________________________________
global_max_pooling1d_32 (Global (None, 100)          0           conv1d_32[0][0]                  
__________________________________________________________________________________________________
global_max_pooling1d_33 (Global (None, 100)          0           conv1d_33[0][0]                  
__________________________________________________________________________________________________
global_max_pooling1d_34 (Global (None, 100)          0           conv1d_34[0][0]                  
__________________________________________________________________________________________________
concatenate_10 (Concatenate)    (None, 300)          0           global_max_pooling1d_32[0][0]    
                                                                 global_max_pooling1d_33[0][0]    
                                                                 global_max_pooling1d_34[0][0]    
__________________________________________________________________________________________________
dense_27 (Dense)                (None, 256)          77056       concatenate_10[0][0]             
__________________________________________________________________________________________________
dropout_11 (Dropout)            (None, 256)          0           dense_27[0][0]                   
__________________________________________________________________________________________________
dense_28 (Dense)                (None, 3)            771         dropout_11[0][0]                 
__________________________________________________________________________________________________
activation_6 (Activation)       (None, 3)            0           dense_28[0][0]                   
==================================================================================================
Total params: 4,258,127
Trainable params: 4,258,127
Non-trainable params: 0
__________________________________________________________________________________________________

------------------------------THANK YOU---------------------------------
